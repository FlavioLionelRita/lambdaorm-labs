version: "3"
networks:
  pentest:
    driver: bridge

services:
  postgres:
    container_name: lambdaorm-svc-pentest-postgres
    image: postgres:10
    restart: always
    environment:
      - POSTGRES_DB=northwind
      - POSTGRES_USER=northwind
      - POSTGRES_PASSWORD=northwind
    volumes:
      - ./volume/postgres-data:/var/lib/postgresql/data
    ports:
      - '5435:5432'
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "test" ]
      interval: 3s
      timeout: 1s
      retries: 10
    networks:
      - pentest
  lambdaorm-api:
    depends_on:
      - postgres
    container_name: lambdaorm-svc-pentest-api
    image: flaviorita/lambdaorm-svc:0.4.40
    environment:
      - HOST=http://localhost
      - PORT=9292
      - WORKSPACE=/workspace
      - 'CNN_POSTGRES={"host":"lambdaorm-svc-pentest-postgres","port":5435,"user":"northwind","password":"northwind","database":"northwind"}'
    ports:
      - 9292:9292
    expose:
      - 9292
    networks:
      - pentest
    volumes:
      - ./volume/workspace:/workspace
  prometheus:
    image: prom/prometheus:v2.20.1
    container_name: lambdaorm-svc-pentest-prometheus
    volumes:
      - ./volume/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - 9090:9090
    expose:
      - 9090
    networks:
      - pentest
  grafana:
    depends_on:
      - prometheus
    image: grafana/grafana:7.1.5
    container_name: lambdaorm-svc-pentest-grafana
    volumes:      
      - ./volume/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - 3000:3000
    expose:
      - 3000
    networks:
      - pentest
volumes:
  prometheus_data: {}
  grafana_data: {}